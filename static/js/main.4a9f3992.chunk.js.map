{"version":3,"sources":["images/mrpb.png","images/downvote.svg","images/upvote.svg","images/delete.svg","Header.js","IdeaForm.js","Controls.js","Idea.js","IdeaList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","aria-label","type","placeholder","aria-hidden","onChange","handleSearch","IdeaForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onTitleChange","e","text","target","value","valid","length","setState","title","validTitle","onBodyChange","body","validBody","onSave","newCard","state","id","Date","now","quality","handleListUpdate","checkForMrPB","toLowerCase","includes","document","querySelector","classList","add","titleCountClass","bodyCountClass","src","require","alt","name","htmlFor","aria-required","aria-live","disabled","aria-controls","onClick","Component","Controls","activeFilter","handleFilter","aria-pressed","Idea","onUpdateText","textContent","property","handleTextUpdate","onUpvote","handleQualityUpdate","onDownvote","onDelete","onBlur","contentEditable","suppressContentEditableWarning","role","qualityText","cardId","IdeaList","cardList","map","card","src_Idea_0","key","App","getCards","cards","JSON","parse","localStorage","getItem","ideaCards","searchTerms","filter","innerText","update","unshift","splice","i","indexOf","updateIdeas","matchIndex","action","setItem","stringify","onShow","showAll","_this2","Array","from","querySelectorAll","btn","btnText","filteredList","terms","showBtn","aria-expanded","slice","src_Header","src_IdeaForm_0","src_Controls","src_IdeaList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a9f3992.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mrpb.7c98ec62.png\";","module.exports = __webpack_public_path__ + \"static/media/downvote.25ed1843.svg\";","module.exports = __webpack_public_path__ + \"static/media/upvote.0c69c417.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.527a2911.svg\";","import React from 'react';\nimport './Header.scss';\n\nfunction Header(props) {\n  return (\n    <header className='header-bar'>\n      <h1>ideabox<span>triples</span></h1>\n      <div aria-label='Search ideas' className='search-box'>\n        <input type='search ' className='search-input' placeholder='Search' aria-hidden='false' onChange={props.handleSearch}/>\n        <button type='button' aria-label='Search button' className='search-btn'><i className='fas fa-search fa-lg'></i><i className='fa fa-minus-circle' aria-hidden='true'></i></button>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport './IdeaForm.scss';\n\nclass IdeaForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n      validTitle: false,\n      validBody: false\n    }\n  }\n\n  onTitleChange = (e) => {\n    const text = e.target.value;\n    let valid = text.length === 0 || text.length > 70 ? false : true;\n    this.setState({title: text, validTitle: valid});\n  }\n\n  onBodyChange = (e) => {\n    const text = e.target.value;\n    let valid = text.length === 0 || text.length > 120 ? false : true;\n    this.setState({body: text, validBody: valid});\n  }\n\n  onSave = () => {\n    const newCard = {title: this.state.title, body: this.state.body, id: Date.now(), quality: 0};\n    this.props.handleListUpdate(newCard, 'save');\n    this.checkForMrPB(this.state.title, this.state.body);\n    this.setState({title: '', body: '', validTitle: true, validBody: true});\n  }\n\n  checkForMrPB = (title, body) => {\n    if (title.toLowerCase().includes('poopy', 'butthole') || \n      body.toLowerCase().includes('poopy', 'butthole')) {\n      document.querySelector('.pb-animation').classList.add('mr-pb');\n    }\n  }\n\n  render() {\n    const titleCountClass = !this.state.validTitle ? 'char-txt error' : 'char-txt';\n    const bodyCountClass = !this.state.validBody ? 'char-txt error' : 'char-txt';\n    return (\n      <div className='new-idea-area'>\n        <section className='form-section'>\n          <div className='pb-animation'>\n            <img src={require('./images/mrpb.png')} alt='Mr PoopyButthole runs across screen.'/>\n          </div>\n          <form name='newIdea' className='idea-form'>\n            <label htmlFor='new-title'>Title</label>\n            <input type='text' \n                   id='new-title' \n                   className='new-title-input' \n                   aria-required='true' \n                   value={this.state.title} \n                   onChange={this.onTitleChange} \n            />\n            <p className={titleCountClass} aria-live='polite'>{this.state.title.length} out of 70 characters</p>\n            <label htmlFor='new-body'>Body</label>\n            <textarea type='text-area' \n                      className='new-body-input' \n                      id='new-body' \n                      aria-required='true'\n                      value={this.state.body} \n                      onChange={this.onBodyChange}>\n            </textarea> \n            <p className={bodyCountClass} aria-live='polite'>{this.state.body.length} out of 120 characters</p>\n            <button type='button' \n                    className='save-btn' \n                    disabled={!this.state.validTitle || !this.state.validBody} aria-controls='idea-form' \n                    onClick={this.onSave}>Save\n            </button>\n          </form>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default IdeaForm;\n","import React from 'react';\nimport './Controls.scss';\n\nfunction Controls(props) {\n  return (\n      <section className='filter-section'>\n        <label className='filter-label'>Filter by Quality</label>\n        <div className='filter-btns' aria-label='Filter options'>\n          <button type='button' \n                  className={ props.activeFilter === 'Mehhh' ? 'filter-btn mehhh-btn active-btn' : 'filter-btn mehhh-btn'} \n                  onClick={props.handleFilter} \n                  aria-controls='card-area' \n                  aria-pressed='false'>Mehhh\n          </button>\n          <button type='button' \n                  className={ props.activeFilter === 'Swill' ? 'filter-btn swill-btn active-btn' : 'filter-btn swill-btn'} aria-controls='card-area' \n                  aria-pressed='false' \n                  onClick={props.handleFilter}>Swill\n          </button>\n          <button type='button' \n                  className={ props.activeFilter === 'Plausible' ? 'filter-btn plausible-btn active-btn' : 'filter-btn plausible-btn'}  aria-controls='card-area' \n                  aria-pressed='false' \n                  onClick={props.handleFilter}>Plausible\n          </button>\n          <button type='button' \n                  className={ props.activeFilter === 'Genius' ? 'filter-btn genius-btn active-btn' : 'filter-btn genius-btn'}  aria-controls='card-area' \n                  aria-pressed='false' \n                  onClick={props.handleFilter}>Genius\n          </button>\n          <button type='button' \n                  className={ props.activeFilter === 'Bestest' ? 'filter-btn bestest-btn active-btn' : 'filter-btn bestest-btn'}  aria-controls='card-area' \n                  aria-pressed='false' \n                  onClick={props.handleFilter}>Bestest\n          </button>\n        </div>\n      </section>\n  );\n}\n\nexport default Controls;\n","import React, {Component} from 'react';\nimport './Idea.scss';\n\nclass Idea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  onUpdateText = e => {\n    const text = e.target.textContent;\n    const property = e.target.id === 'cardTitle' ? 'title'\n    : 'body';\n    this.props.handleTextUpdate(property, text, this.props.id);\n  }\n\n  onUpvote = () => {\n    if (this.props.quality < 4) {\n      this.props.handleQualityUpdate(this.props.id, 'upvote');\n    }\n  }\n\n  onDownvote = () => {\n    if (this.props.quality > 0) {\n      this.props.handleQualityUpdate(this.props.id);\n    } \n  }\n\n  onDelete = () => {\n    this.props.handleListUpdate({id: this.props.id});\n  }\n\n  render() {\n    return (\n      <article className='idea-card animated flash'>\n        <div className='card-main'>\n          <h2 id='cardTitle' \n              onBlur={this.onUpdateText} \n              contentEditable \n              suppressContentEditableWarning={true}>\n              {this.props.title}\n          </h2>\n          <p id='cardBody' \n             onBlur={this.onUpdateText} \n             contentEditable \n             suppressContentEditableWarning={true}>\n             {this.props.body}\n          </p>\n        </div>\n        <div className='card-bottom'>\n          <div className='card-btns'>\n            <img className='btn-image downvote-btn' \n                 role='button' \n                 aria-label='Downvote this idea'\n                 aria-controls='quality-txt' \n                 src={require('./images/downvote.svg')} \n                 alt='downvote button icon'\n                 onClick={this.onDownvote} \n            />\n            <img className='btn-image upvote-btn' \n                 role='button' \n                 aria-label='Upvote this idea' \n                 aria-controls='quality-txt' \n                 src={require('./images/upvote.svg')} \n                 alt='upvote button icon'\n                 onClick={this.onUpvote} \n            />\n            <h3 className='idea-quality' id='quality-txt'>Quality: {this.props.qualityText[this.props.quality]}</h3>\n          </div>\n          <div className='delete-btn'>\n            <img className='btn-image delete-card-btn' \n                 role='button'\n                 aria-label='Delete idea' \n                 aria-controls={this.props.cardId} \n                 src={require('./images/delete.svg')} \n                 alt='delete button icon'\n                 onClick={this.onDelete} \n            />\n          </div>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default Idea;\n","import React from 'react';\nimport './IdeaList.scss';\nimport Idea from './Idea';\n\nfunction IdeaList(props) {\n    return (\n      <section className='card-area' \n               aria-live='polite'>\n        {\n          props.cardList.map(card => {\n            return <Idea title={card.title}\n                         body={card.body}\n                         quality={card.quality}\n                         key={card.id}\n                         id={card.id}\n                         qualityText={props.qualityText}\n                         handleListUpdate={props.handleListUpdate}\n                         handleTextUpdate={props.handleTextUpdate}\n                         handleQualityUpdate={props.handleQualityUpdate}\n                   />\n          })\n        }\n      </section>\n    );\n\n}\n\nexport default IdeaList;\n","import React, {Component} from 'react';\nimport './App.scss';\nimport Header from './Header';\nimport IdeaForm from './IdeaForm';\nimport Controls from './Controls';\nimport IdeaList from './IdeaList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ideaCards: [],\n      searchTerms: '',\n      filter: '',\n      showAll: false\n    }\n  }\n\n  componentDidMount() {\n    this.getCards();\n  }\n\n  getCards = () => {\n    const cards = JSON.parse(localStorage.getItem('idea cards')) || [];\n    this.setState({ideaCards: cards});\n  }\n\n  handleSearch = e => {\n    this.setState({searchTerms: e.target.value});\n  }\n\n  handleFilter = e => {\n    const filter = e.target.innerText;\n    filter === this.state.filter ? this.setState({filter: ''})\n    : this.setState({filter: filter});\n  }\n\n  handleListUpdate = (card, update) => {\n    const cards = JSON.parse(localStorage.getItem('idea cards'));\n    update === 'save' ? cards.unshift(card) \n    : cards.splice(cards.map(i => i.id).indexOf(card.id), 1);\n    this.updateIdeas(cards);\n  }\n\n  handleTextUpdate = (property, text, id) => {\n    const cards = JSON.parse(localStorage.getItem('idea cards'));\n    const matchIndex = cards.map(i => i.id).indexOf(id);\n    cards[matchIndex][property] = text;\n    this.updateIdeas(cards);\n  }\n\n  handleQualityUpdate = (id, action) => {\n    const cards = JSON.parse(localStorage.getItem('idea cards'));\n    const matchIndex = cards.map(i => i.id).indexOf(id);\n    action === 'upvote' ? cards[matchIndex].quality++ : cards[matchIndex].quality--;\n    this.updateIdeas(cards);\n  }\n\n  updateIdeas = cards => {\n    this.setState({ideaCards: cards});\n    localStorage.setItem('idea cards', JSON.stringify(cards));\n  }\n\n  onShow = e => {\n    this.setState({showAll: !this.state.showAll});\n  }\n\n  render() {\n    const qualityText = Array.from(document.querySelectorAll('.filter-btn')).map(btn => btn.innerText);\n\n    let btnText = this.state.showAll ? 'Show Less...' : 'Show More...';\n\n    let filteredList = this.state.ideaCards.filter(card => {\n      const terms = this.state.searchTerms.toLowerCase();\n      return (card.title.toLowerCase().includes(terms) || card.body.toLowerCase().includes(terms)) && qualityText[card.quality].includes(this.state.filter);\n    });\n\n    const showBtn = filteredList.length > 10 &&\n    <section className='btn-div'>\n      <button type='button' \n              className='show-btn' \n              aria-expanded='false' \n              aria-controls='card-area' \n              onClick={this.onShow}>\n              {btnText}\n      </button>\n    </section>;\n\n    if (!this.state.showAll) {\n      filteredList = filteredList.slice(0, 10);  \n    } \n\n    return (\n      <div className='App'>\n        <Header handleSearch={this.handleSearch}/>\n        <IdeaForm ideaCards={this.state.ideaCards}\n                  handleListUpdate={this.handleListUpdate}\n        />\n        <Controls handleFilter={this.handleFilter} \n                  activeFilter={this.state.filter}\n        />\n        <IdeaList cardList={filteredList}\n                  qualityText={qualityText}\n                  handleListUpdate={this.handleListUpdate}\n                  handleTextUpdate={this.handleTextUpdate}\n                  handleQualityUpdate={this.handleQualityUpdate}\n        />\n        {showBtn}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}